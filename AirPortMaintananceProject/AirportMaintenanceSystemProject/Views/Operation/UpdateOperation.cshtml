@model AirportMaintenanceSystemProject.Models.Operation

@{
    ViewBag.Title = "UpdateOperation";
}


<head>
    <link rel="stylesheet" href="@Url.Content("/Content/AddNewOperationCss.css")" />
</head>
@if (ViewBag.Message != null)
{

    <div class="alert alert-success" role="alert">
        @ViewBag.Message
    </div>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <div class="heading">
        <h4>Update Status And Operation Details</h4>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OperationId)

    <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <label class="radio-inline">
                @Html.RadioButtonFor(model => model.Status, "Complete", new { @name = "status" })
                Complete
            </label>
            <label class="radio-inline">
                @Html.RadioButtonFor(model => model.Status, "Pending", new { @name = "status" })
                Pending
            </label>
            <label class="radio-inline">
                @Html.RadioButtonFor(model => model.Status, "Working", new { @name = "status" })
                Working
            </label>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>



    @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartmentId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "OperationList")
    </div>

</div>
}

